name: CI-CD

on: [push, pull_request]

jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]
        config: [Debug, Release]
    runs-on: ${{ matrix.os }}
    steps:
    - name: Checkout
      uses: actions/checkout@v1
    - name: Setup dotnet
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '3.0.100-rc1-014190'
    - name: Setup python
      uses: actions/setup-python@v1
      with:
        python-version: '3.x'
        architecture: 'x64'
    - name: Restore
      run: dotnet restore
      shell: pwsh
    - name: Build
      env:
        CONFIG: ${{ matrix.config }}
      run: dotnet build -c $env:CONFIG
      shell: pwsh
    - name: Test
      env:
        CONFIG: ${{ matrix.config }}
      run: dotnet test -c $env:CONFIG /p:CollectCoverage=true /p:CoverletOutput=../../coverage.json /p:MergeWith=../../coverage.json /maxcpucount:1
      shell: pwsh
    - name: Generate report
      env:
        CONFIG: ${{ matrix.config }}
      run: dotnet test -c $env:CONFIG ./test/Test.Base /p:CollectCoverage=true /p:CoverletOutputFormat=opencover /p:CoverletOutput=../../coverage.xml /p:MergeWith=../../coverage.json /maxcpucount:1
      shell: pwsh
    - name: Upload report
      continue-on-error: true
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
      run: |
        curl -s https://codecov.io/bash > codecov
        chmod +x codecov
        ./codecov -f coverage.xml
      shell: pwsh
    - name: Generate artifacts
      env:
        CONFIG: ${{ matrix.config }}
      run: |
        mkdir artifacts
        dotnet build -c $env:CONFIG -o ./artifacts
      shell: pwsh
    - name: Upload artifacts
      uses: actions/upload-artifact@master
      with:
        name: built
        path: ./artifacts
  deploy:
    needs: test
    strategy:
      fail-fast: true
      matrix:
        os: [ubuntu-latest]
        config: [Release]
    runs-on: ${{ matrix.os }}
    steps:
    - name: Checkout
      uses: actions/checkout@v1
    - name: Setup dotnet
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '3.0.100-rc1-014190'
    - name: Restore
      run: dotnet restore
      shell: pwsh
    - name: Build
      env:
        CONFIG: ${{ matrix.config }}
      run: dotnet build -c $env:CONFIG
      shell: pwsh
    - name: Generate artifacts
      env:
        CONFIG: ${{ matrix.config }}
      run: |
        mkdir artifacts
        dotnet pack -c $env:CONFIG -o ./packages
      shell: pwsh
    - name: Upload artifacts
      uses: actions/upload-artifact@master
      with:
        name: packages
        path: ./packages
    - name: Deploy tools
      if: github.event_name == 'push'
      env:
        MYGET_TOKEN: ${{ secrets.MYGET_TOKEN }}
      run: dotnet nuget push ./packages/CodeRunner.0.0.1-pre.nupkg -k $env:MYGET_TOKEN -s https://www.myget.org/F/stardustdl/api/v2/package
      shell: pwsh